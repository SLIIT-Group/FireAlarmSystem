/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firesensordesktopclient;

import rmiserver.ServerService;
import java.awt.CardLayout;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.lang.SecurityManager;
import static java.lang.Thread.sleep;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Nuwanga
 */
public class DesktopFrame extends javax.swing.JFrame {

    /**
     * Creates new form DesktopFrame
     */
    String uninputi;

    public DesktopFrame() {
        initComponents();
    }

    void viewPanel(String cname) {
        CardLayout cL = (CardLayout) jPanel1.getLayout();
        cL.show(jPanel1, cname);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        unlabel = new javax.swing.JLabel();
        pwlabel = new javax.swing.JLabel();
        uninput = new javax.swing.JTextField();
        pwinput = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jpanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sensortable = new javax.swing.JTable();
        sensorlistlabel = new javax.swing.JLabel();
        addlabel = new javax.swing.JLabel();
        alarmnumberlabel = new javax.swing.JLabel();
        alarmnumberinput = new javax.swing.JTextField();
        activelabel = new javax.swing.JLabel();
        floorlabel = new javax.swing.JLabel();
        floorinput = new javax.swing.JTextField();
        roomlabel = new javax.swing.JLabel();
        roominput = new javax.swing.JTextField();
        smokelabel = new javax.swing.JLabel();
        smokeinput = new javax.swing.JTextField();
        co2label = new javax.swing.JLabel();
        co2input = new javax.swing.JTextField();
        editlabel1 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        delbtn = new javax.swing.JButton();
        alarmlabel1 = new javax.swing.JLabel();
        addalarmnumberinput = new javax.swing.JTextField();
        floorlabel1 = new javax.swing.JLabel();
        addfloorinput = new javax.swing.JTextField();
        roomlabel1 = new javax.swing.JLabel();
        addroominput = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        activecheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.CardLayout());

        unlabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        unlabel.setText("Username :");

        pwlabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        pwlabel.setText("Password  :");

        uninput.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N

        pwinput.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pwlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(uninput)
                    .addComponent(pwinput, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(578, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(uninput, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(unlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pwlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pwinput, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(335, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, "card2");

//        jpanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseMoved(java.awt.event.MouseEvent evt) {
//                jpanel3MouseMoved(evt);
//            }
//        });

        sensortable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sensortable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alarm Id", "Alarm Number", "Active Status", "Floor Number", "Room Number", "Smoke Level", "CO2 Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sensortable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sensortable.setRowHeight(28);
        sensortable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sensortableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sensortable);
        if (sensortable.getColumnModel().getColumnCount() > 0) {
            sensortable.getColumnModel().getColumn(0).setResizable(false);
            sensortable.getColumnModel().getColumn(1).setResizable(false);
            sensortable.getColumnModel().getColumn(2).setResizable(false);
            sensortable.getColumnModel().getColumn(3).setResizable(false);
            sensortable.getColumnModel().getColumn(4).setResizable(false);
            sensortable.getColumnModel().getColumn(5).setResizable(false);
            sensortable.getColumnModel().getColumn(6).setResizable(false);
        }

        sensorlistlabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        sensorlistlabel.setText("Sensor List :");

        addlabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        addlabel.setText("Add :");

        alarmnumberlabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alarmnumberlabel.setText("Fire Sensor Number :");

        alarmnumberinput.setEditable(false);
        alarmnumberinput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        activelabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        activelabel.setText("Active :");

        floorlabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        floorlabel.setText("Floor Number :");

        floorinput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        roomlabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomlabel.setText("Room Number :");

        roominput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        smokelabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        smokelabel.setText("Smoke Level (1-10):");

        smokeinput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        co2label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        co2label.setText("CO2 Level (1-10):");

        co2input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        editlabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        editlabel1.setText("Edit :");

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        updatebtn.setText("Update Sensor");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        delbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        delbtn.setText("Delete Sensor");
        delbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtnActionPerformed(evt);
            }
        });

        alarmlabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alarmlabel1.setText("Fire Sensor Number :");

        addalarmnumberinput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        floorlabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        floorlabel1.setText("Floor Number :");

        addfloorinput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        roomlabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomlabel1.setText("Room Number :");

        addroominput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnadd.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnadd.setText("Add Sensor");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel3Layout = new javax.swing.GroupLayout(jpanel3);
        jpanel3.setLayout(jpanel3Layout);
        jpanel3Layout.setHorizontalGroup(
            jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sensorlistlabel)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jpanel3Layout.createSequentialGroup()
                            .addComponent(alarmnumberlabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(alarmnumberinput)
                            .addGap(56, 56, 56)
                            .addComponent(activelabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(activecheck)
                            .addGap(52, 52, 52)
                            .addComponent(floorlabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(floorinput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(75, 75, 75)
                            .addComponent(roomlabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(roominput)))
                    .addGroup(jpanel3Layout.createSequentialGroup()
                        .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel3Layout.createSequentialGroup()
                                .addComponent(alarmlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addalarmnumberinput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(floorlabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addfloorinput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(roomlabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addroominput, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpanel3Layout.createSequentialGroup()
                                .addComponent(smokelabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(smokeinput, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(co2label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(co2input, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(updatebtn)))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(delbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jpanel3Layout.setVerticalGroup(
            jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(sensorlistlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(editlabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roominput, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(floorinput)
                    .addComponent(floorlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alarmnumberinput)
                    .addComponent(alarmnumberlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activecheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(co2input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(smokelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(smokeinput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(co2label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(delbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addComponent(addlabel)
                .addGap(18, 18, 18)
                .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(alarmlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addalarmnumberinput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addroominput)
                    .addComponent(addfloorinput)
                    .addComponent(floorlabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomlabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnadd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(146, 146, 146))
        );

        jPanel1.add(jpanel3, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1123, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 903, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*username and password is checked*/
        if (uninput.getText().toString().equals("admin") && pwinput.getText().toString().equals("admin")) {
            System.out.println("success login");

            /*To establish RMI connection*/
            System.setProperty("java.security.policy", "file:allowall.policy");

            try {
                Registry reg = LocateRegistry.getRegistry("localhost", 1099);

                ServerService ss = (ServerService) reg.lookup("SensorService");
                ArrayList list = ss.sensorlist();
                ArrayList pk = (ArrayList) list.get(0);
                ArrayList id = (ArrayList) list.get(1);
                ArrayList active = (ArrayList) list.get(2);
                ArrayList fnum = (ArrayList) list.get(3);
                ArrayList rnum = (ArrayList) list.get(4);
                ArrayList slevel = (ArrayList) list.get(5);
                ArrayList rlevel = (ArrayList) list.get(6);

                
                DefaultTableModel dm = (DefaultTableModel) sensortable.getModel();
                    while (dm.getRowCount() > 0) {
                        dm.removeRow(0);
                    }
                
                /*data from arraylists are added to table*/
                DefaultTableModel model = (DefaultTableModel) sensortable.getModel();
                Object rawdata[] = new Object[7];
                for (int i = 0; i < pk.size(); i++) {
                    rawdata[0] = pk.get(i);
                    rawdata[1] = id.get(i);
                    if (active.get(i).equals("1")) {
                        rawdata[2] = "YES";
                    } else {
                        rawdata[2] = "NO";
                    }
                    rawdata[3] = fnum.get(i);
                    rawdata[4] = rnum.get(i);
                    rawdata[5] = slevel.get(i);
                    rawdata[6] = rlevel.get(i);

                    model.addRow(rawdata);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            viewPanel("card3");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sensortableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sensortableMouseClicked

        int rowselected = sensortable.getSelectedRow();

        String fireSensorNo = sensortable.getValueAt(rowselected, 1).toString();
        String active = sensortable.getValueAt(rowselected, 2).toString();
        String fNo = sensortable.getValueAt(rowselected, 3).toString();
        String rNo = sensortable.getValueAt(rowselected, 4).toString();
        String sLevel = sensortable.getValueAt(rowselected, 5).toString();
        String co2Level = sensortable.getValueAt(rowselected, 6).toString();

        /*Through this data will be loaded to input fields allowing the user to edit them*/
        alarmnumberinput.setText(fireSensorNo);
        floorinput.setText(fNo);
        roominput.setText(rNo);
        if (active.equals("YES")) {
            activecheck.setSelected(true);
        } else {
            activecheck.setSelected(false);
        }
        smokeinput.setText(sLevel);
        co2input.setText(co2Level);


    }//GEN-LAST:event_sensortableMouseClicked

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed

        String id = addalarmnumberinput.getText();
        String fno = addfloorinput.getText();
        String rno = addroominput.getText();

        /*To establish RMI connection*/
        System.setProperty("java.security.policy", "file:allowall.policy");
        int status = 0;

        try {
            Registry reg = LocateRegistry.getRegistry("localhost", 1099);

            ServerService ss = (ServerService) reg.lookup("SensorService");
            status = ss.addSensor(id, fno, rno);  /*add method*/

        } catch (Exception e) {
            e.printStackTrace();
        }

        addalarmnumberinput.setText("");
        addfloorinput.setText("");
        addroominput.setText("");

        if (status == 1) {
            JOptionPane.showMessageDialog(null, "Entry Added");
        } else {
            JOptionPane.showMessageDialog(null, "Entry Failed");
        }


    }//GEN-LAST:event_btnaddActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        String id = alarmnumberinput.getText();
        String active = "0";
        if (activecheck.isSelected()) {
            active = "1";
        } else {
            active = "0";
        }
        String fno = floorinput.getText();
        String rno = roominput.getText();
        String slevel = smokeinput.getText();
        String co2level = co2input.getText();

        /*To establish RMI connection*/
        System.setProperty("java.security.policy", "file:allowall.policy");
        int status = 0;

        try {
            Registry reg = LocateRegistry.getRegistry("localhost", 1099);

            ServerService ss = (ServerService) reg.lookup("SensorService");
            status = ss.updateSensor(id, active, fno, rno, slevel, co2level);    /*update method*/

        } catch (Exception e) {
            e.printStackTrace();
        }

        alarmnumberinput.setText("");
        floorinput.setText("");
        roominput.setText("");
        activecheck.setSelected(false);
        smokeinput.setText("");
        co2input.setText("");

        if (status == 1) {
            JOptionPane.showMessageDialog(null, "Entry Updated");
        } else {
            JOptionPane.showMessageDialog(null, "Failed");
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void delbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtnActionPerformed
        String id = alarmnumberinput.getText();

        /*To establish RMI connection*/
        System.setProperty("java.security.policy", "file:allowall.policy");
        int status = 0;

        try {
            Registry reg = LocateRegistry.getRegistry("localhost", 1099);

            ServerService ss = (ServerService) reg.lookup("SensorService");
            status = ss.delSensor(id);    /*delete method*/

        } catch (Exception e) {
            e.printStackTrace();
        }

        alarmnumberinput.setText("");
        floorinput.setText("");
        roominput.setText("");
        activecheck.setSelected(false);
        smokeinput.setText("");
        co2input.setText("");

        if (status == 1) {
            JOptionPane.showMessageDialog(null, "Entry Deleted");
        } else {
            JOptionPane.showMessageDialog(null, "Failed");
        }
    }//GEN-LAST:event_delbtnActionPerformed

//    private void jpanel3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpanel3MouseMoved
//        
//        
//         /*To establish RMI connection*/
//        System.setProperty("java.security.policy", "file:allowall.policy");
// 
//      
//        try{
//            Registry reg = LocateRegistry.getRegistry("localhost", 1099);
//            
//            ServerService ss = (ServerService)reg.lookup("SensorService");
//            ArrayList list = ss.sensorlist();
//            ArrayList pk = (ArrayList)list.get(0);
//            ArrayList id = (ArrayList)list.get(1);
//            ArrayList active = (ArrayList)list.get(2);
//            ArrayList fnum = (ArrayList)list.get(3);
//            ArrayList rnum = (ArrayList)list.get(4);
//            ArrayList slevel = (ArrayList)list.get(5);
//            ArrayList rlevel = (ArrayList)list.get(6);
//            
//           sleep(5000); /*Called every 5 seconds when you are in the Desktop Window*/
//           
//            DefaultTableModel dm = (DefaultTableModel)sensortable.getModel();
//            while(dm.getRowCount() > 0)
//                {
//                        dm.removeRow(0);
//                }
//            
//            
//            DefaultTableModel model = (DefaultTableModel)sensortable.getModel();
//            Object rawdata[] = new Object [7];
//            for (int i = 0; i < pk.size(); i++){
//                rawdata[0] = pk.get(i);
//                rawdata[1] = id.get(i);
//                if(active.get(i).equals("1")){
//                    rawdata[2] = "YES";
//                }else{
//                    rawdata[2] = "NO";
//                }
//                rawdata[3] = fnum.get(i);
//                rawdata[4] = rnum.get(i);
//                rawdata[5] = slevel.get(i);
//                rawdata[6] = rlevel.get(i);
//                
//                model.addRow(rawdata);
//                
//            }
//            
//            
//            
//        }catch (Exception e){
//            e.printStackTrace();
//        }
//        
//           
//        
//        
//    }//GEN-LAST:event_jpanel3MouseMoved
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DesktopFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DesktopFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DesktopFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DesktopFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DesktopFrame().setVisible(true);
            }
        });

        //////////////////////////////////////////////////
        //creating timer task, timer  
        Timer t = new Timer();
        
        TimerTask tt = new TimerTask() {
            
            int n = 0;
            int p = 0;  
            public void run() {
             
                /*To establish RMI connection*/
                System.setProperty("java.security.policy", "file:allowall.policy");

                try {
                    Registry reg = LocateRegistry.getRegistry("localhost", 1099);

                    ServerService ss = (ServerService) reg.lookup("SensorService");
                    ArrayList list = ss.sensorlist();
                    ArrayList pk = (ArrayList) list.get(0);
                    ArrayList id = (ArrayList) list.get(1);
                    ArrayList active = (ArrayList) list.get(2);
                    ArrayList fnum = (ArrayList) list.get(3);
                    ArrayList rnum = (ArrayList) list.get(4);
                    ArrayList slevel = (ArrayList) list.get(5);
                    ArrayList rlevel = (ArrayList) list.get(6);

                    

                    DefaultTableModel dm = (DefaultTableModel) sensortable.getModel();
                    while (dm.getRowCount() > 0) {
                        dm.removeRow(0);
                    }

                    DefaultTableModel model = (DefaultTableModel) sensortable.getModel();
                    Object rawdata[] = new Object[7];
                    for (int i = 0; i < pk.size(); i++) {
                        rawdata[0] = pk.get(i);
                        rawdata[1] = id.get(i);
                        if (active.get(i).equals("1")) {
                            rawdata[2] = "YES";
                        } else {
                            rawdata[2] = "NO";
                        }
                        rawdata[3] = fnum.get(i);
                        rawdata[4] = rnum.get(i);
                        rawdata[5] = slevel.get(i);
                        rawdata[6] = rlevel.get(i);

                        if(Integer.parseInt(slevel.get(i).toString()) > 5){
                            n++;
                        }if (Integer.parseInt(rlevel.get(i).toString()) > 5){
                            p++;
                        }
                        
                        
                         model.addRow(rawdata);
                      
                    }
                    
                            if((n > 0) && (p > 0)){
                                JOptionPane frame = new JOptionPane();
                                JOptionPane.showMessageDialog(frame,
                                    "Smoke and CO2 are High",
                                    "Warning",
                                    JOptionPane.WARNING_MESSAGE);
                                    n=0; p=0;
                            }
                           else if(n > 0){
                                JOptionPane frame = new JOptionPane();
                                JOptionPane.showMessageDialog(frame,
                                    "Smoke is High",
                                    "Warning",
                                    JOptionPane.WARNING_MESSAGE);
                                    n=0;p=0;
                            }else if(p > 0){
                                JOptionPane frame = new JOptionPane();
                                JOptionPane.showMessageDialog(frame,
                                    "CO2 is High",
                                    "Warning",
                                    JOptionPane.WARNING_MESSAGE);
                                    n=0;p=0;
                            }
                        

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        ;
        };
		
	t.scheduleAtFixedRate(tt, 0, 15000);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activecheck;
    private javax.swing.JLabel activelabel;
    private javax.swing.JTextField addalarmnumberinput;
    private javax.swing.JTextField addfloorinput;
    private javax.swing.JLabel addlabel;
    private javax.swing.JTextField addroominput;
    private javax.swing.JLabel alarmlabel1;
    private javax.swing.JTextField alarmnumberinput;
    private javax.swing.JLabel alarmnumberlabel;
    private javax.swing.JButton btnadd;
    private javax.swing.JTextField co2input;
    private javax.swing.JLabel co2label;
    private javax.swing.JButton delbtn;
    private javax.swing.JLabel editlabel1;
    private javax.swing.JTextField floorinput;
    private javax.swing.JLabel floorlabel;
    private javax.swing.JLabel floorlabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpanel3;
    private javax.swing.JPasswordField pwinput;
    private javax.swing.JLabel pwlabel;
    private javax.swing.JTextField roominput;
    private javax.swing.JLabel roomlabel;
    private javax.swing.JLabel roomlabel1;
    private javax.swing.JLabel sensorlistlabel;
    private static javax.swing.JTable sensortable;
    private javax.swing.JTextField smokeinput;
    private javax.swing.JLabel smokelabel;
    private javax.swing.JTextField uninput;
    private javax.swing.JLabel unlabel;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
